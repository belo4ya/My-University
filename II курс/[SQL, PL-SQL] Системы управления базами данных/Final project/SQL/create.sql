create table USERS (
    id number generated by default as identity,
    username nvarchar2(80) not null,
    email nvarchar2(80) not null,
    password nvarchar2(80) not null,
    birthdate date,
    role_id number not null,
    country_id number,
    player_id number,
    team_id number,

    constraint users_pk primary key (id),
    constraint favorite_arc check (
         (team_id is not null and player_id is null) or
         (team_id is null and player_id is not null) or
         (team_id is null and player_id is null )
        )
);

create table ROLES (
    id number generated by default as identity,
    name nvarchar2(80) not null unique,

    constraint roles_pk primary key (id)
);

create table COUNTRIES (
    id number generated by default as identity,
    name nvarchar2(80) not null,
    icon nvarchar2(255) not null,
    region_id number not null,

    constraint countries_pk primary key (id)
);

create table REGIONS (
    id number generated by default as identity,
    name nvarchar2(80) not null,
    icon nvarchar2(255) not null,

    constraint regions_pk primary key (id)
);

create table ARTICLES (
    id number generated by default as identity,
    title nvarchar2(255) not null,
    content nclob not null,
    creation_date timestamp default sysdate not null,
    user_id number not null,
    event_id number,

    constraint article_pk primary key (id)
);

create table ARTICLE_COMMENTS (
    id number generated by default as identity,
    content nvarchar2(2000) not null,
    creation_date timestamp default sysdate not null,
    article_id number not null,
    user_id number not null,
    comment_id number,

    constraint article_comments_pk primary key (id)
);

create table MATCH_COMMENTS (
    id number generated by default as identity,
    content nvarchar2(2000) not null,
    creation_date timestamp default sysdate not null,
    match_id number not null,
    user_id number not null,
    comment_id number,

    constraint match_comments_pk primary key (id)
);

create table MATCHES (
    id number generated by default as identity,
    start_date timestamp not null,
    broadcast_link nvarchar2(255),
    description nvarchar2(255),
    event_id number not null,
    match_type_id number not null,

    constraint matches_pk primary key (id)
);

create table MATCH_TYPES (
    id number generated by default as identity,
    number_maps number not null,
    number_rounds number not null,

    constraint match_types_pk primary key (id),
    constraint match_types_uk unique (number_maps, number_rounds)
);

create table EVENTS (
    id number generated by default as identity,
    name nvarchar2(80) not null,
    icon nvarchar2(255),
    start_date date not null,
    end_date date not null,
    prize_pool nvarchar2(80) not null,
    number_teams number(5) not null,
    sponsor_id number not null,
    location_id number not null,

    constraint events_pk primary key (id)
);

create table INVITED_TEAMS (
    id number generated by default as identity,
    event_id number not null,
    team_id number not null,

    constraint invited_teams_pk primary key (id, event_id, team_id)
);

create table SPONSORS (
    id number generated by default as identity,
    name nvarchar2(80) not null,
    link nvarchar2(255),

    constraint sponsors_pk primary key (id)
);

create table LOCATIONS (
    id number generated by default as identity,
    name nvarchar2(80) check ( lower(name) in ('online', 'offline') ) not null,
    city nvarchar2(80),
    region_id number,
    country_id number,

    constraint locations_pk primary key (id),
    constraint venue_arc check (
         (region_id is not null and country_id is null) or
         (region_id is null and country_id is not null) or
         (region_id is null and country_id is null )
        )
);

create table MATCH_TEAMS (
    id number generated by default as identity,
    match_id number not null,
    team_id number,

    constraint match_teams_pk primary key (id, match_id, team_id)
);

create table SCORES (
        id number generated by default as identity,
        match_id number not null,
        map_id number not null,
        team_id number not null,
        first_half number(5),
        second_half number(5),
        overtime number(5),

        constraint scores_pk primary key (id, match_id, map_id, team_id)
);

create table MAPS (
    id number generated by default as identity,
    name nvarchar2(80) not null unique,
    icon nvarchar2(255),

    constraint maps_pk primary key (id)
);

create table TEAMS (
    id number generated by default as identity,
    name nvarchar2(80) not null,
    points number(10),
    peak number(10),
    icon nvarchar2(255),

    constraint teams_pk primary key (id)
);

create table PLAYERS (
    id number generated by default as identity,
    nickname nvarchar2(80) not null,
    first_name nvarchar2(80),
    last_name nvarchar2(80),
    birthdate date,
    photo nvarchar2(255),
    country_id number,

    constraint players_pk primary key (id)
);

create table TEAM_PLAYERS (
    id number generated by default as identity,
    player_id number not null,
    team_id number not null,
    start_date date not null,
    end_date date,

    constraint team_players_pk primary key (id, player_id, team_id, start_date)
);

create table PLAYER_ACTIVITIES (
    id number generated by default as identity,
    player_id number not null,
    status_id number not null,
    start_date date not null,
    end_date date,

    constraint player_activities_pk primary key (id, player_id, status_id, start_date)
);

create table PLAYER_STATUSES (
    id number generated by default as identity,
    name nvarchar2(80) not null unique,

    constraint player_statuses primary key (id)
);

alter table USERS
    add constraint users_roles_fk foreign key (role_id)
        references ROLES (id) on delete cascade;
alter table USERS
    add constraint users_countries_fk foreign key (country_id)
        references COUNTRIES (id) on delete cascade;
alter table USERS
    add constraint users_players_fk foreign key (player_id)
        references PLAYERS (id) on delete cascade;
alter table USERS
    add constraint users_teams_fk foreign key (team_id)
        references TEAMS (id) on delete cascade;

alter table COUNTRIES
    add constraint countries_regions_fk foreign key (region_id)
        references REGIONS (id) on delete cascade;

alter table ARTICLES
    add constraint articles_users_fk foreign key (user_id)
        references USERS (id) on delete cascade;
alter table ARTICLES
    add constraint articles_events_fk foreign key (event_id)
        references EVENTS (id) on delete cascade;

alter table ARTICLE_COMMENTS
    add constraint article_comments_articles_fk foreign key (article_id)
        references ARTICLES (id) on delete cascade;
alter table ARTICLE_COMMENTS
    add constraint article_comments_users_fk foreign key (user_id)
        references USERS (id) on delete cascade;
alter table ARTICLE_COMMENTS
    add constraint article_comments_self_fk foreign key (comment_id)
        references ARTICLE_COMMENTS (id) on delete cascade;

alter table MATCH_COMMENTS
    add constraint match_comments_matches_fk foreign key (match_id)
        references MATCHES (id) on delete cascade;
alter table MATCH_COMMENTS
    add constraint match_comments_users_fk foreign key (user_id)
        references USERS (id) on delete cascade;
alter table MATCH_COMMENTS
    add constraint match_comments_self_fk foreign key (comment_id)
        references MATCH_COMMENTS (id) on delete cascade;

alter table MATCHES
    add constraint matches_events_fk foreign key (event_id)
        references EVENTS (id) on delete cascade;
alter table MATCHES
    add constraint matches_match_types_fk foreign key (match_type_id)
        references MATCH_TYPES (id) on delete cascade;

alter table EVENTS
    add constraint events_sponsors_fk foreign key (sponsor_id)
        references SPONSORS (id) on delete cascade;
alter table EVENTS
    add constraint events_locations_fk foreign key (location_id)
        references LOCATIONS (id) on delete cascade;

alter table INVITED_TEAMS
    add constraint invited_teams_events_fk foreign key (event_id)
        references EVENTS (id) on delete cascade;
alter table INVITED_TEAMS
    add constraint invited_teams_teams_fk foreign key (team_id)
        references TEAMS (id) on delete cascade;

alter table LOCATIONS
    add constraint locations_regions_fk foreign key (region_id)
        references REGIONS (id) on delete cascade;
alter table LOCATIONS
    add constraint locations_countries_fk foreign key (country_id)
        references COUNTRIES (id) on delete cascade;

alter table MATCH_TEAMS
    add constraint match_teams_matches_fk foreign key (match_id)
        references MATCHES (id) on delete cascade;
alter table MATCH_TEAMS
    add constraint match_teams_teams_fk foreign key (team_id)
        references TEAMS (id) on delete cascade;

alter table SCORES
    add constraint scores_matches_fk foreign key (match_id)
        references MATCHES (id) on delete cascade;
alter table SCORES
    add constraint scores_maps_fk foreign key (map_id)
        references MAPS (id) on delete cascade;
alter table SCORES
    add constraint scores_teams_fk foreign key (team_id)
        references TEAMS (id) on delete cascade;

alter table PLAYERS
    add constraint players_countries_fk foreign key (country_id)
        references COUNTRIES (id) on delete cascade;

alter table TEAM_PLAYERS
    add constraint team_players_players_fk foreign key (player_id)
        references PLAYERS (id) on delete cascade;
alter table TEAM_PLAYERS
    add constraint team_players_teams_fk foreign key (team_id)
        references TEAMS (id) on delete cascade;

alter table PLAYER_ACTIVITIES
    add constraint player_activities_players_fk foreign key (player_id)
        references PLAYERS (id) on delete cascade;
alter table PLAYER_ACTIVITIES
    add constraint player_activities_statuses_fk foreign key (status_id)
        references PLAYER_STATUSES (id) on delete cascade;
